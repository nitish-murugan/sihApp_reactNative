{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar WindScreen = function WindScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var windData = [{\n    id: 1,\n    name: 'Wind Turbine 1',\n    voltage: 24.5,\n    current: 13.1,\n    power: 320,\n    windSpeed: 12.5,\n    direction: 'NW',\n    efficiency: 85.2,\n    rotorSpeed: 28,\n    status: 'Online'\n  }, {\n    id: 2,\n    name: 'Wind Turbine 2',\n    voltage: 23.8,\n    current: 12.4,\n    power: 295,\n    windSpeed: 11.8,\n    direction: 'W',\n    efficiency: 82.7,\n    rotorSpeed: 26,\n    status: 'Online'\n  }, {\n    id: 3,\n    name: 'Wind Turbine 3',\n    voltage: 25.2,\n    current: 14.2,\n    power: 358,\n    windSpeed: 14.2,\n    direction: 'NW',\n    efficiency: 88.5,\n    rotorSpeed: 32,\n    status: 'Online'\n  }, {\n    id: 4,\n    name: 'Wind Turbine 4',\n    voltage: 0,\n    current: 0,\n    power: 0,\n    windSpeed: 8.5,\n    direction: 'N',\n    efficiency: 0,\n    rotorSpeed: 0,\n    status: 'Maintenance'\n  }];\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    setTimeout(function () {\n      setRefreshing(false);\n    }, 2000);\n  };\n  var getParameterIcon = function getParameterIcon(parameter) {\n    var icons = {\n      voltage: 'flash',\n      current: 'trending-up',\n      power: 'speedometer',\n      windSpeed: 'leaf',\n      direction: 'compass',\n      efficiency: 'analytics',\n      rotorSpeed: 'refresh-circle'\n    };\n    return icons[parameter] || 'information-circle';\n  };\n  var getParameterColor = function getParameterColor(parameter) {\n    var colors = {\n      voltage: '#3b82f6',\n      current: '#10b981',\n      power: '#f59e0b',\n      windSpeed: '#06b6d4',\n      direction: '#8b5cf6',\n      efficiency: '#ef4444',\n      rotorSpeed: '#f97316'\n    };\n    return colors[parameter] || '#6b7280';\n  };\n  var getStatusColor = function getStatusColor(status) {\n    switch (status) {\n      case 'Online':\n        return '#10b981';\n      case 'Offline':\n        return '#ef4444';\n      case 'Maintenance':\n        return '#f59e0b';\n      default:\n        return '#6b7280';\n    }\n  };\n  var getWindSpeedCategory = function getWindSpeedCategory(speed) {\n    if (speed < 5) return 'Low';\n    if (speed < 12) return 'Moderate';\n    if (speed < 20) return 'High';\n    return 'Very High';\n  };\n  var renderWindCard = function renderWindCard(turbine) {\n    var parameters = [{\n      key: 'voltage',\n      label: 'Voltage',\n      value: `${turbine.voltage} V`,\n      unit: 'V'\n    }, {\n      key: 'current',\n      label: 'Current',\n      value: `${turbine.current} A`,\n      unit: 'A'\n    }, {\n      key: 'power',\n      label: 'Power',\n      value: `${turbine.power} W`,\n      unit: 'W'\n    }, {\n      key: 'windSpeed',\n      label: 'Wind Speed',\n      value: `${turbine.windSpeed} m/s`,\n      unit: 'm/s'\n    }, {\n      key: 'direction',\n      label: 'Direction',\n      value: turbine.direction,\n      unit: ''\n    }, {\n      key: 'rotorSpeed',\n      label: 'Rotor Speed',\n      value: `${turbine.rotorSpeed} RPM`,\n      unit: 'RPM'\n    }];\n    return _jsxs(View, {\n      style: styles.windCard,\n      children: [_jsx(LinearGradient, {\n        colors: ['#06b6d4', '#0891b2'],\n        style: styles.cardHeader,\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 0\n        },\n        children: _jsxs(View, {\n          style: styles.headerContent,\n          children: [_jsxs(View, {\n            style: styles.titleContainer,\n            children: [_jsx(Ionicons, {\n              name: \"leaf\",\n              size: 28,\n              color: \"#ffffff\"\n            }), _jsx(Text, {\n              style: styles.turbineTitle,\n              children: turbine.name\n            })]\n          }), _jsx(View, {\n            style: [styles.statusBadge, {\n              backgroundColor: getStatusColor(turbine.status)\n            }],\n            children: _jsx(Text, {\n              style: styles.statusText,\n              children: turbine.status\n            })\n          })]\n        })\n      }), _jsxs(View, {\n        style: styles.parametersContainer,\n        children: [_jsxs(View, {\n          style: styles.windSpeedContainer,\n          children: [_jsxs(View, {\n            style: styles.windSpeedHeader,\n            children: [_jsx(Ionicons, {\n              name: \"leaf\",\n              size: 24,\n              color: \"#06b6d4\"\n            }), _jsx(Text, {\n              style: styles.windSpeedTitle,\n              children: \"Wind Conditions\"\n            })]\n          }), _jsxs(View, {\n            style: styles.windSpeedContent,\n            children: [_jsxs(Text, {\n              style: styles.windSpeedValue,\n              children: [turbine.windSpeed, \" m/s\"]\n            }), _jsx(Text, {\n              style: styles.windSpeedCategory,\n              children: getWindSpeedCategory(turbine.windSpeed)\n            }), _jsxs(Text, {\n              style: styles.windDirection,\n              children: [\"Direction: \", turbine.direction]\n            })]\n          })]\n        }), _jsx(View, {\n          style: styles.parametersGrid,\n          children: parameters.map(function (param, index) {\n            return _jsxs(View, {\n              style: styles.parameterCard,\n              children: [_jsxs(View, {\n                style: styles.parameterHeader,\n                children: [_jsx(Ionicons, {\n                  name: getParameterIcon(param.key),\n                  size: 20,\n                  color: getParameterColor(param.key)\n                }), _jsx(Text, {\n                  style: styles.parameterLabel,\n                  children: param.label\n                })]\n              }), _jsx(Text, {\n                style: [styles.parameterValue, {\n                  color: getParameterColor(param.key)\n                }],\n                children: param.value\n              })]\n            }, index);\n          })\n        }), _jsxs(View, {\n          style: styles.efficiencyContainer,\n          children: [_jsx(Text, {\n            style: styles.efficiencyTitle,\n            children: \"Turbine Efficiency\"\n          }), _jsx(View, {\n            style: styles.efficiencyBar,\n            children: _jsx(LinearGradient, {\n              colors: ['#10b981', '#34d399'],\n              style: [styles.efficiencyFill, {\n                width: `${turbine.efficiency}%`\n              }]\n            })\n          }), _jsxs(Text, {\n            style: styles.efficiencyText,\n            children: [turbine.efficiency, \"% Efficiency\"]\n          })]\n        })]\n      })]\n    }, turbine.id);\n  };\n  var totalPower = windData.reduce(function (sum, turbine) {\n    return sum + turbine.power;\n  }, 0);\n  var avgWindSpeed = (windData.reduce(function (sum, turbine) {\n    return sum + turbine.windSpeed;\n  }, 0) / windData.length).toFixed(1);\n  var activeTurbines = windData.filter(function (t) {\n    return t.status === 'Online';\n  }).length;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(LinearGradient, {\n      colors: ['#06b6d4', '#0891b2'],\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Wind Energy Monitoring\"\n      }), _jsx(Text, {\n        style: styles.headerSubtitle,\n        children: \"Real-time wind turbine performance\"\n      }), _jsxs(View, {\n        style: styles.summaryContainer,\n        children: [_jsxs(View, {\n          style: styles.summaryItem,\n          children: [_jsxs(Text, {\n            style: styles.summaryValue,\n            children: [totalPower, \"W\"]\n          }), _jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Total Power\"\n          })]\n        }), _jsxs(View, {\n          style: styles.summaryItem,\n          children: [_jsxs(Text, {\n            style: styles.summaryValue,\n            children: [avgWindSpeed, \" m/s\"]\n          }), _jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Avg Wind Speed\"\n          })]\n        }), _jsxs(View, {\n          style: styles.summaryItem,\n          children: [_jsx(Text, {\n            style: styles.summaryValue,\n            children: activeTurbines\n          }), _jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Active Turbines\"\n          })]\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: styles.refreshButton,\n        onPress: onRefresh,\n        children: [_jsx(Ionicons, {\n          name: \"refresh\",\n          size: 20,\n          color: \"#ffffff\"\n        }), _jsx(Text, {\n          style: styles.refreshText,\n          children: \"Refresh Data\"\n        })]\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.scrollView,\n      showsVerticalScrollIndicator: false,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: windData.map(function (turbine) {\n        return renderWindCard(turbine);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8fafc'\n  },\n  header: {\n    padding: 20,\n    paddingBottom: 25\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginBottom: 5\n  },\n  headerSubtitle: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginBottom: 20\n  },\n  summaryContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  summaryItem: {\n    alignItems: 'center',\n    flex: 1\n  },\n  summaryValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#ffffff'\n  },\n  summaryLabel: {\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 5\n  },\n  refreshButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 20,\n    alignSelf: 'flex-start'\n  },\n  refreshText: {\n    color: '#ffffff',\n    marginLeft: 8,\n    fontWeight: '600'\n  },\n  scrollView: {\n    flex: 1,\n    paddingHorizontal: 20\n  },\n  windCard: {\n    backgroundColor: '#ffffff',\n    borderRadius: 15,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n    overflow: 'hidden'\n  },\n  cardHeader: {\n    padding: 20\n  },\n  headerContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1\n  },\n  turbineTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginLeft: 12\n  },\n  statusBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 20\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: '#ffffff'\n  },\n  parametersContainer: {\n    padding: 20\n  },\n  windSpeedContainer: {\n    backgroundColor: '#f0f9ff',\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: '#bae6fd'\n  },\n  windSpeedHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  windSpeedTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#0c4a6e',\n    marginLeft: 10\n  },\n  windSpeedContent: {\n    alignItems: 'center'\n  },\n  windSpeedValue: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#06b6d4',\n    marginBottom: 5\n  },\n  windSpeedCategory: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#0c4a6e',\n    marginBottom: 3\n  },\n  windDirection: {\n    fontSize: 12,\n    color: '#64748b'\n  },\n  parametersGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginBottom: 20\n  },\n  parameterCard: {\n    width: '48%',\n    backgroundColor: '#f7fafc',\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: '#e2e8f0'\n  },\n  parameterHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  parameterLabel: {\n    fontSize: 12,\n    color: '#718096',\n    fontWeight: '600',\n    marginLeft: 8\n  },\n  parameterValue: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  efficiencyContainer: {\n    backgroundColor: '#f7fafc',\n    borderRadius: 12,\n    padding: 15,\n    borderWidth: 1,\n    borderColor: '#e2e8f0'\n  },\n  efficiencyTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#2d3748',\n    marginBottom: 10\n  },\n  efficiencyBar: {\n    height: 8,\n    backgroundColor: '#e2e8f0',\n    borderRadius: 4,\n    marginBottom: 8,\n    overflow: 'hidden'\n  },\n  efficiencyFill: {\n    height: '100%',\n    borderRadius: 4\n  },\n  efficiencyText: {\n    fontSize: 12,\n    color: '#718096',\n    textAlign: 'center'\n  }\n});\nexport default WindScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","RefreshControl","TouchableOpacity","Ionicons","LinearGradient","jsx","_jsx","jsxs","_jsxs","WindScreen","_useState","_useState2","_slicedToArray","refreshing","setRefreshing","windData","id","name","voltage","current","power","windSpeed","direction","efficiency","rotorSpeed","status","onRefresh","setTimeout","getParameterIcon","parameter","icons","getParameterColor","colors","getStatusColor","getWindSpeedCategory","speed","renderWindCard","turbine","parameters","key","label","value","unit","style","styles","windCard","children","cardHeader","start","x","y","end","headerContent","titleContainer","size","color","turbineTitle","statusBadge","backgroundColor","statusText","parametersContainer","windSpeedContainer","windSpeedHeader","windSpeedTitle","windSpeedContent","windSpeedValue","windSpeedCategory","windDirection","parametersGrid","map","param","index","parameterCard","parameterHeader","parameterLabel","parameterValue","efficiencyContainer","efficiencyTitle","efficiencyBar","efficiencyFill","width","efficiencyText","totalPower","reduce","sum","avgWindSpeed","length","toFixed","activeTurbines","filter","t","container","header","headerTitle","headerSubtitle","summaryContainer","summaryItem","summaryValue","summaryLabel","refreshButton","onPress","refreshText","scrollView","showsVerticalScrollIndicator","refreshControl","create","flex","padding","paddingBottom","fontSize","fontWeight","marginBottom","flexDirection","justifyContent","alignItems","marginTop","paddingHorizontal","paddingVertical","borderRadius","alignSelf","marginLeft","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","overflow","borderWidth","borderColor","flexWrap","textAlign"],"sources":["E:/Projects/SIH app zip/SIH app/src/screens/WindScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  RefreshControl,\n  TouchableOpacity,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nconst WindScreen = () => {\n  const [refreshing, setRefreshing] = useState(false);\n\n  const windData = [\n    {\n      id: 1,\n      name: 'Wind Turbine 1',\n      voltage: 24.5,\n      current: 13.1,\n      power: 320,\n      windSpeed: 12.5,\n      direction: 'NW',\n      efficiency: 85.2,\n      rotorSpeed: 28,\n      status: 'Online',\n    },\n    {\n      id: 2,\n      name: 'Wind Turbine 2',\n      voltage: 23.8,\n      current: 12.4,\n      power: 295,\n      windSpeed: 11.8,\n      direction: 'W',\n      efficiency: 82.7,\n      rotorSpeed: 26,\n      status: 'Online',\n    },\n    {\n      id: 3,\n      name: 'Wind Turbine 3',\n      voltage: 25.2,\n      current: 14.2,\n      power: 358,\n      windSpeed: 14.2,\n      direction: 'NW',\n      efficiency: 88.5,\n      rotorSpeed: 32,\n      status: 'Online',\n    },\n    {\n      id: 4,\n      name: 'Wind Turbine 4',\n      voltage: 0,\n      current: 0,\n      power: 0,\n      windSpeed: 8.5,\n      direction: 'N',\n      efficiency: 0,\n      rotorSpeed: 0,\n      status: 'Maintenance',\n    },\n  ];\n\n  const onRefresh = () => {\n    setRefreshing(true);\n    setTimeout(() => {\n      setRefreshing(false);\n    }, 2000);\n  };\n\n  const getParameterIcon = (parameter) => {\n    const icons = {\n      voltage: 'flash',\n      current: 'trending-up',\n      power: 'speedometer',\n      windSpeed: 'leaf',\n      direction: 'compass',\n      efficiency: 'analytics',\n      rotorSpeed: 'refresh-circle',\n    };\n    return icons[parameter] || 'information-circle';\n  };\n\n  const getParameterColor = (parameter) => {\n    const colors = {\n      voltage: '#3b82f6',\n      current: '#10b981',\n      power: '#f59e0b',\n      windSpeed: '#06b6d4',\n      direction: '#8b5cf6',\n      efficiency: '#ef4444',\n      rotorSpeed: '#f97316',\n    };\n    return colors[parameter] || '#6b7280';\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'Online': return '#10b981';\n      case 'Offline': return '#ef4444';\n      case 'Maintenance': return '#f59e0b';\n      default: return '#6b7280';\n    }\n  };\n\n  const getWindSpeedCategory = (speed) => {\n    if (speed < 5) return 'Low';\n    if (speed < 12) return 'Moderate';\n    if (speed < 20) return 'High';\n    return 'Very High';\n  };\n\n  const renderWindCard = (turbine) => {\n    const parameters = [\n      { key: 'voltage', label: 'Voltage', value: `${turbine.voltage} V`, unit: 'V' },\n      { key: 'current', label: 'Current', value: `${turbine.current} A`, unit: 'A' },\n      { key: 'power', label: 'Power', value: `${turbine.power} W`, unit: 'W' },\n      { key: 'windSpeed', label: 'Wind Speed', value: `${turbine.windSpeed} m/s`, unit: 'm/s' },\n      { key: 'direction', label: 'Direction', value: turbine.direction, unit: '' },\n      { key: 'rotorSpeed', label: 'Rotor Speed', value: `${turbine.rotorSpeed} RPM`, unit: 'RPM' },\n    ];\n\n    return (\n      <View key={turbine.id} style={styles.windCard}>\n        <LinearGradient\n          colors={['#06b6d4', '#0891b2']}\n          style={styles.cardHeader}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 0 }}\n        >\n          <View style={styles.headerContent}>\n            <View style={styles.titleContainer}>\n              <Ionicons name=\"leaf\" size={28} color=\"#ffffff\" />\n              <Text style={styles.turbineTitle}>{turbine.name}</Text>\n            </View>\n            <View style={[\n              styles.statusBadge,\n              { backgroundColor: getStatusColor(turbine.status) }\n            ]}>\n              <Text style={styles.statusText}>{turbine.status}</Text>\n            </View>\n          </View>\n        </LinearGradient>\n\n        <View style={styles.parametersContainer}>\n          {/* Wind Speed Highlight */}\n          <View style={styles.windSpeedContainer}>\n            <View style={styles.windSpeedHeader}>\n              <Ionicons name=\"leaf\" size={24} color=\"#06b6d4\" />\n              <Text style={styles.windSpeedTitle}>Wind Conditions</Text>\n            </View>\n            <View style={styles.windSpeedContent}>\n              <Text style={styles.windSpeedValue}>{turbine.windSpeed} m/s</Text>\n              <Text style={styles.windSpeedCategory}>{getWindSpeedCategory(turbine.windSpeed)}</Text>\n              <Text style={styles.windDirection}>Direction: {turbine.direction}</Text>\n            </View>\n          </View>\n\n          <View style={styles.parametersGrid}>\n            {parameters.map((param, index) => (\n              <View key={index} style={styles.parameterCard}>\n                <View style={styles.parameterHeader}>\n                  <Ionicons\n                    name={getParameterIcon(param.key)}\n                    size={20}\n                    color={getParameterColor(param.key)}\n                  />\n                  <Text style={styles.parameterLabel}>{param.label}</Text>\n                </View>\n                <Text style={[styles.parameterValue, { color: getParameterColor(param.key) }]}>\n                  {param.value}\n                </Text>\n              </View>\n            ))}\n          </View>\n\n          {/* Efficiency Indicator */}\n          <View style={styles.efficiencyContainer}>\n            <Text style={styles.efficiencyTitle}>Turbine Efficiency</Text>\n            <View style={styles.efficiencyBar}>\n              <LinearGradient\n                colors={['#10b981', '#34d399']}\n                style={[styles.efficiencyFill, { width: `${turbine.efficiency}%` }]}\n              />\n            </View>\n            <Text style={styles.efficiencyText}>{turbine.efficiency}% Efficiency</Text>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const totalPower = windData.reduce((sum, turbine) => sum + turbine.power, 0);\n  const avgWindSpeed = (windData.reduce((sum, turbine) => sum + turbine.windSpeed, 0) / windData.length).toFixed(1);\n  const activeTurbines = windData.filter(t => t.status === 'Online').length;\n\n  return (\n    <View style={styles.container}>\n      {/* Header */}\n      <LinearGradient\n        colors={['#06b6d4', '#0891b2']}\n        style={styles.header}\n      >\n        <Text style={styles.headerTitle}>Wind Energy Monitoring</Text>\n        <Text style={styles.headerSubtitle}>Real-time wind turbine performance</Text>\n        \n        {/* Summary Stats */}\n        <View style={styles.summaryContainer}>\n          <View style={styles.summaryItem}>\n            <Text style={styles.summaryValue}>{totalPower}W</Text>\n            <Text style={styles.summaryLabel}>Total Power</Text>\n          </View>\n          <View style={styles.summaryItem}>\n            <Text style={styles.summaryValue}>{avgWindSpeed} m/s</Text>\n            <Text style={styles.summaryLabel}>Avg Wind Speed</Text>\n          </View>\n          <View style={styles.summaryItem}>\n            <Text style={styles.summaryValue}>{activeTurbines}</Text>\n            <Text style={styles.summaryLabel}>Active Turbines</Text>\n          </View>\n        </View>\n\n        <TouchableOpacity style={styles.refreshButton} onPress={onRefresh}>\n          <Ionicons name=\"refresh\" size={20} color=\"#ffffff\" />\n          <Text style={styles.refreshText}>Refresh Data</Text>\n        </TouchableOpacity>\n      </LinearGradient>\n\n      {/* Wind Turbines List */}\n      <ScrollView\n        style={styles.scrollView}\n        showsVerticalScrollIndicator={false}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        {windData.map((turbine) => renderWindCard(turbine))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8fafc',\n  },\n  header: {\n    padding: 20,\n    paddingBottom: 25,\n  },\n  headerTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginBottom: 5,\n  },\n  headerSubtitle: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginBottom: 20,\n  },\n  summaryContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  summaryItem: {\n    alignItems: 'center',\n    flex: 1,\n  },\n  summaryValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#ffffff',\n  },\n  summaryLabel: {\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 5,\n  },\n  refreshButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 20,\n    alignSelf: 'flex-start',\n  },\n  refreshText: {\n    color: '#ffffff',\n    marginLeft: 8,\n    fontWeight: '600',\n  },\n  scrollView: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  windCard: {\n    backgroundColor: '#ffffff',\n    borderRadius: 15,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n    overflow: 'hidden',\n  },\n  cardHeader: {\n    padding: 20,\n  },\n  headerContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  turbineTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginLeft: 12,\n  },\n  statusBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 20,\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: '#ffffff',\n  },\n  parametersContainer: {\n    padding: 20,\n  },\n  windSpeedContainer: {\n    backgroundColor: '#f0f9ff',\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: '#bae6fd',\n  },\n  windSpeedHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  windSpeedTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#0c4a6e',\n    marginLeft: 10,\n  },\n  windSpeedContent: {\n    alignItems: 'center',\n  },\n  windSpeedValue: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#06b6d4',\n    marginBottom: 5,\n  },\n  windSpeedCategory: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#0c4a6e',\n    marginBottom: 3,\n  },\n  windDirection: {\n    fontSize: 12,\n    color: '#64748b',\n  },\n  parametersGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n  },\n  parameterCard: {\n    width: '48%',\n    backgroundColor: '#f7fafc',\n    borderRadius: 12,\n    padding: 15,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: '#e2e8f0',\n  },\n  parameterHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  parameterLabel: {\n    fontSize: 12,\n    color: '#718096',\n    fontWeight: '600',\n    marginLeft: 8,\n  },\n  parameterValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  efficiencyContainer: {\n    backgroundColor: '#f7fafc',\n    borderRadius: 12,\n    padding: 15,\n    borderWidth: 1,\n    borderColor: '#e2e8f0',\n  },\n  efficiencyTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#2d3748',\n    marginBottom: 10,\n  },\n  efficiencyBar: {\n    height: 8,\n    backgroundColor: '#e2e8f0',\n    borderRadius: 4,\n    marginBottom: 8,\n    overflow: 'hidden',\n  },\n  efficiencyFill: {\n    height: '100%',\n    borderRadius: 4,\n  },\n  efficiencyText: {\n    fontSize: 12,\n    color: '#718096',\n    textAlign: 'center',\n  },\n});\n\nexport default WindScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}